" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" ----------------------------------------------------------------------------
"  NeoBundle
" ----------------------------------------------------------------------------
set runtimepath+=~/.vim/bundle/neobundle.vim/
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" vimproc first
NeoBundle 'Shougo/vimproc', {
      \ 'build' : {
      \     'windows' : 'make -f make_mingw32.mak',
      \     'cygwin' : 'make -f make_cygwin.mak',
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \    },
      \ }

" My Bundles
NeoBundle 'bling/vim-airline'
NeoBundle 'MarcWeber/vim-addon-mw-utils'
NeoBundle 'Raimondi/delimitMate'
NeoBundle 'bilalq/lite-dfm'
NeoBundle 'briancollins/vim-jst'
NeoBundle 'digitaltoad/vim-jade'
NeoBundle 'editorconfig/editorconfig-vim'
NeoBundle 'ervandew/supertab'
NeoBundle 'garbas/vim-snipmate'
NeoBundle 'groenewege/vim-less'
NeoBundle 'honza/vim-snippets'
NeoBundle 'jistr/vim-nerdtree-tabs'
NeoBundle 'jlanzarotta/bufexplorer'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'lepture/vim-jinja'
NeoBundle 'mustache/vim-mustache-handlebars'
NeoBundle 'mxw/vim-jsx'
NeoBundle 'othree/html5.vim'
NeoBundle 'pangloss/vim-javascript'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'sickill/vim-pasta'
NeoBundle 'tomtom/tcomment_vim'
NeoBundle 'tomtom/tlib_vim'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'tpope/vim-haml'
NeoBundle 'tpope/vim-liquid'
NeoBundle 'tpope/vim-markdown'
NeoBundle 'tpope/vim-rails'
NeoBundle 'tpope/vim-surround'
NeoBundle 'tpope/vim-git'
NeoBundle 'vim-scripts/bufexplorer.zip'
NeoBundle 'wting/rust.vim'
NeoBundle 'junegunn/goyo.vim'
NeoBundle 'jordwalke/VimSplitBalancer'
NeoBundle 'fatih/vim-go'
NeoBundle 'leafgarland/typescript-vim'
NeoBundle 'MartinLafreniere/vim-PairTools'
" NeoBundle 'Valloric/YouCompleteMe'

" Color bundles
NeoBundle 'jordwalke/flatlandia'
NeoBundle 'larssmit/vim-getafe'

call neobundle#end()

" ----------------------------------------------------------------------------
"  General Kung Fu
" ----------------------------------------------------------------------------

syntax on
filetype plugin indent on

" Swapfiles mostly just get in the way for me.
set noswapfile

" ignore lots of files
set wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.mov,*.pdf,*.psd,*.ai
set wildignore+=*.ppt,*.pptx,*.doc,*.docx,*.xls,*.xlsx

" ----------------------------------------------------------------------------
"  Text Formatting
" ----------------------------------------------------------------------------

set autoindent             " automatic indent new lines
set smartindent            " be smart about it
inoremap # X<BS>#
set softtabstop=2          " yep, two
set shiftwidth=2           " ..
set tabstop=2
set expandtab              " expand tabs to spaces
set nosmarttab             " fuck tabs
set formatoptions+=qrn1    " support for numbered/bullet lists
"set textwidth=80           " wrap at 80 chars by default
set virtualedit=block      " allow virtual edit in visual block ..
set list listchars=tab:»»,trail:·

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
" let mapleader = ","

" exit to normal mode with 'jj'
inoremap jj <ESC>


" reflow paragraph with Q in normal and visual mode
nnoremap Q gqap
vnoremap Q gq

" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" give my pinky a bit of a break
noremap ; :
noremap , ;

" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set nolazyredraw           " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set colorcolumn=80         " for long lines (yes, 80 is archaeic)
set ch=2                   " command line height
set backspace=2            " allow backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling

" backup files are more of a bother than anything else
set nobackup
set nowritebackup


" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set visualbell             " shut the fuck up


" ----------------------------------------------------------------------------
" Searching
" ----------------------------------------------------------------------------

" just use normal regexs
nnoremap / /\v
vnoremap / /\v
set ignorecase             " ignore case when searching
set smartcase              " don't ignore case if using any uppercase
set nohlsearch             " don't highlight searches


" ----------------------------------------------------------------------------
" Command-T Options
" ----------------------------------------------------------------------------

let g:CommandTMaxFiles=100000
set wildignore+=*.o,obj-ff-*/**,.git,.hg,node_modules,build/**


" ---------------------------------------------------------------------------
"  Strip all trailing whitespace in file
" ---------------------------------------------------------------------------

function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction
map <leader>s :call StripWhitespace ()<CR>


" ---------------------------------------------------------------------------
"  Alphabetize CSS like a boss
" ---------------------------------------------------------------------------

map <leader>c :g#\({\n\)\@<=#.,/}/sort<CR>)

" ---------------------------------------------------------------------------
"  Show blame for the currently selected lines
" ---------------------------------------------------------------------------
map <leader>h :<C-U>!hg blame -fu <C-R>=expand("%:p") <CR> \| sed -n <C-R>=line("'<") <CR>,<C-R>=line("'>") <CR>p <CR>


" ---------------------------------------------------------------------------
" Split window veritcally & switch to the new window
" ---------------------------------------------------------------------------
map <leader>w :vs<CR><C-w>l

" ---------------------------------------------------------------------------
" Make my terminal experience better
" ---------------------------------------------------------------------------
if !has("gui_running")
  set mouse=a              " use the mouse like a rookie
  set t_Co=256             " make sure that colors look right in screen
  colorscheme wombat256mod
endif


" ---------------------------------------------------------------------------
" CtrlP mapping
" ---------------------------------------------------------------------------
map <leader>t :CtrlP<CR>
map <leader>T :CtrlPCurFile<CR>
map <leader>b :CtrlPBuffer<CR>
map <leader>g :CtrlPTag<CR>
map <leader>G :CtrlPBufTag<CR>
map <leader><leader> :CtrlPMixed<CR>

let g:ctrlp_max_files=200000
let g:ctrlp_max_height=25


" ---------------------------------------------------------------------------
" Use ctrl+h/l to change tabs
" ---------------------------------------------------------------------------
nnoremap <C-h> :tabp<CR>
nnoremap <C-l> :tabn<CR>
inoremap <C-h> <C-o>:tabp<CR>
inoremap <C-l> <C-o>:tabn<CR>
vnoremap <C-h> :tabp<CR>
vnoremap <C-l> :tabn<CR>


" ---------------------------------------------------------------------------
" Nerd Tree Tabs (because I use tabs wrong)
" ---------------------------------------------------------------------------
map <leader>q :NERDTreeTabsToggle<CR>
" focus file on startup, even if opening a directory
let g:nerdtree_tabs_smart_startup_focus = 2


" ---------------------------------------------------------------------------
" Goyo
" ---------------------------------------------------------------------------
map <leader><space> :Goyo<CR>

" ---------------------------------------------------------------------------
" Syntastic
" ---------------------------------------------------------------------------
let g:syntastic_javascript_checkers = ['eslint', 'jshint']

" ---------------------------------------------------------------------------
" Writing Mode
" ---------------------------------------------------------------------------
function! WritingMode()
  set spell
  set wrap " default on anyway, do don't toggle in disable
  set linebreak
  set nolist
endfunction

function! WritingModeOff()
  set nospell
  set nolinebreak
  " set list
endfunction
map <leader>j :call WritingMode()<CR>
map <leader>J :call WritingModeOff()<CR>

" ---------------------------------------------------------------------------
" More Neobundle at the end of everything
" ---------------------------------------------------------------------------
NeoBundleCheck
